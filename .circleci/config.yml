# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1


orbs:
  docker: circleci/docker@1.6.0
    
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: circleci/node:13.8.0
      
    working_directory: ~/repo
    
    steps:
      - checkout
      
    # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
            - v1-dependencies      
      
      # Create the reqiured virtual environment and install the dependent libraries
      - run:
          name: Create vitual environment
          command: |
            # Create virtual environment
            python3 -m venv venv
            . venv/bin/activate
      - run:
          name: Install dependencies
          command: |            
            # install nodejs, dockerio, npm, htmllint
            make install-dependencies
            
            # Install hadolint
            make install-hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            # make lint for Docker file and index.html
            make lint
            
         
  deploy-new:
    docker:
      - image: python:3.7.3-stretch
      
    working_directory: ~/repo

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["3e:10:02:47:73:2f:2b:3f:a2:28:44:0c:ed:80:6a:29"]
      - run:
          name: install dependencies
          command: |
            
            # Install kubectl
            make install-kubectl
            
            # Install eksctl
            make install-eksctl
            
            # Install awscli 
            make install-awscli

            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            
            aws configure list
            
            # Create Kubernetes Cluster
            make create-eks-cluster
            
            # Create deployments and Services
            make deploy-kubernetes
            
workflows:
  default:
    jobs:
      - build
      - docker/publish:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          update-description: true
          tag: "latest"
          deploy: true
          requires: [build]
      - deploy-new: 
          requires: [docker/publish]
